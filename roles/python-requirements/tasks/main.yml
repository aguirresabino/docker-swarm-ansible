---
- name: Update apt package index
  ansible.builtin.apt:
    update_cache: true
    cache_valid_time: 3600
  tags: [python-requirements]

- name: Install Python3 and related packages
  ansible.builtin.apt:
    name: "{{ python_requirements_apt_packages }}"
    state: "{{ 'latest' if python_requirements_upgrade_python else 'present' }}"
    update_cache: false
  tags: [python-requirements]

- name: Create virtual environment directory
  ansible.builtin.file:
    path: "{{ python_requirements_venv_path }}"
    state: directory
    owner: "{{ python_requirements_venv_user }}"
    group: "{{ python_requirements_venv_group }}"
    mode: '0755'
  tags: [python-requirements]

- name: Create virtual environment
  ansible.builtin.command:
    cmd: "python3 -m venv {{ python_requirements_venv_path }}"
    creates: "{{ python_requirements_venv_path }}/bin/python"
  become: true
  become_user: "{{ python_requirements_venv_user }}"
  tags: [python-requirements]

- name: Upgrade pip in virtual environment
  ansible.builtin.pip:
    name: pip
    state: present
    extra_args: "--upgrade"
    virtualenv: "{{ python_requirements_venv_path }}"
    virtualenv_command: "python3 -m venv"
  become: true
  become_user: "{{ python_requirements_venv_user }}"
  tags: [python-requirements]

- name: Install required Python packages in virtual environment
  ansible.builtin.pip:
    name: "{{ python_requirements_pip_packages }}"
    state: >-
      {{ 'latest' if python_requirements_upgrade_pip_packages else 'present' }}
    virtualenv: "{{ python_requirements_venv_path }}"
    virtualenv_command: "python3 -m venv"
  become: true
  become_user: "{{ python_requirements_venv_user }}"
  tags: [python-requirements]

- name: Verify docker module is importable in virtual environment
  ansible.builtin.command:
    cmd: >-
      {{ python_requirements_venv_path }}/bin/python -c
      "import docker; print('Docker SDK version:', docker.__version__)"
  register: docker_import_test
  changed_when: false
  become: true
  become_user: "{{ python_requirements_venv_user }}"
  tags: [python-requirements, verify]

- name: Display docker module verification result
  ansible.builtin.debug:
    msg: "{{ docker_import_test.stdout }}"
  when: docker_import_test.stdout is defined
  tags: [python-requirements, verify]

- name: Verify jsondiff module is importable in virtual environment
  ansible.builtin.command:
    cmd: >-
      {{ python_requirements_venv_path }}/bin/python -c
      "import jsondiff; print('jsondiff module imported successfully')"
  register: jsondiff_import_test
  changed_when: false
  become: true
  become_user: "{{ python_requirements_venv_user }}"
  tags: [python-requirements, verify]

- name: Display jsondiff module verification result
  ansible.builtin.debug:
    msg: "{{ jsondiff_import_test.stdout }}"
  when: jsondiff_import_test.stdout is defined
  tags: [python-requirements, verify]

- name: Set fact for virtual environment Python path
  ansible.builtin.set_fact:
    ansible_venv_python_interpreter: >-
      {{ python_requirements_venv_path }}/bin/python
  tags: [python-requirements]
